[
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-10-29 13:37:56.003372",
  "module": "quantdairy",
  "name": "Create Deduction Entry",
  "reference_doctype": "Sales Invoice",
  "script": "if doc.custom_apply_deduction and doc.custom_amount_deduct_per_bill <= 0:\n    frappe.throw(\"The Deduction can be Zero or Less, If Apply Deduction is Checked\")\n    \nif doc.custom_amount_deduct_per_bill > doc.outstanding_amount:\n    frappe.throw(\"Deduction Per Bill Cant Be Greater Than Outstanding Amount\")\n\nif not frappe.db.get_value(\"Customer\", filters={'name': doc.customer}, fieldname='custom_supplier'):\n    frappe.throw(\"Please verify that 'Is Internal Supplier' is checked and a supplier is set on the Customer Master for this customer.\")\n    \nget_group = frappe.get_list(\"Customer Group\", filters={'custom_apply_deduction': 1}, pluck='name')\ncustomer_group = frappe.db.get_value(\"Customer\", filters={'name': doc.customer}, fieldname='customer_group')\n\nif doc.custom_amount_deduct_per_bill > doc.outstanding_amount:\n    frappe.throw(\"Deduction Per Bill Can`t Be Greater Than Outstanding Amount\")\n\nif not frappe.db.get_value(\"Customer\", filters={'name': doc.customer}, fieldname='custom_supplier'):\n    frappe.throw(\"Please verify that 'Is Internal Supplier' is checked and a supplier is set on the Customer Master for this customer.\")\n    \ncredit_account = frappe.db.get_single_value(\"Dairy Settings\", fieldname='loan_deduction_debit_account')\ndebit_account = frappe.db.get_single_value(\"Dairy Settings\", fieldname='loan_deduction_debit_account')\n\nif not credit_account or not debit_account:\n    frappe.throw(\"Set Dedit And Credit Account At Dairy Setting To Create Deduction Entry\")\n\nif customer_group in get_group and doc.custom_apply_deduction and doc.outstanding_amount != 0:\n    deduction = frappe.new_doc(\"Deduction\")\n    deduction.deduction_type = \"Material\"\n    deduction.sales_invoice = doc.name\n    deduction.loan_amount = doc.outstanding_amount\n    deduction.deduction_amount_per_bill = doc.custom_amount_deduct_per_bill\n    deduction.supplier = frappe.db.get_value(\"Customer\", filters={'name': doc.customer}, fieldname='custom_supplier')\n    deduction.credit_account = doc.debit_to\n    deduction.debit_account = debit_account\n    deduction.insert()\n    deduction.submit()\n    frappe.msgprint(\"Deduction Entry Submitted Succesfully.\")\n",
  "script_type": "DocType Event"
 },
 {
  "allow_guest": 0,
  "api_method": null,
  "cron_format": null,
  "disabled": 0,
  "docstatus": 0,
  "doctype": "Server Script",
  "doctype_event": "After Submit",
  "event_frequency": "All",
  "modified": "2024-10-30 13:20:50.026536",
  "module": "quantdairy",
  "name": "Apply Deduction For Transporter",
  "reference_doctype": "Purchase Invoice",
  "script": "is_transporter = frappe.db.get_value(\"Supplier\", filters={'name': doc.supplier}, fieldname='is_transporter')\nif is_transporter and frappe.db.exists(\"Deduction\", {'supplier': doc.supplier}):\n    deduction_names = frappe.db.sql(\"\"\"\n        SELECT name FROM `tabDeduction`\n        WHERE deducted_amount != loan_amount \n        AND supplier = %s AND docstatus = 1 AND deduction_type = \"Transporter Loan\"\n    \"\"\", (doc.supplier,), as_dict=True)\n    \n    for deduction in deduction_names:\n        deduction_doc = frappe.get_doc(\"Deduction\", deduction['name'])\n        \n        for installment in deduction_doc.get('deduction_instalment_list'):\n            if installment.instalment_deducted == 0:\n                outstanding_amount = float(frappe.db.get_value(\"Purchase Invoice\", doc.name, \"outstanding_amount\"))\n                \n                if outstanding_amount >= installment.instalment_amount:\n                    journal_entry = frappe.get_doc({\"doctype\": \"Journal Entry\",\"voucher_type\": \"Journal Entry\",\"posting_date\": frappe.utils.today()})\n                    journal_entry.append(\"accounts\", {\n                        \"account\": doc.credit_to,\n                        \"party_type\": \"Supplier\",\n                        \"party\": doc.supplier,\n                        \"debit_in_account_currency\": installment.instalment_amount,\n                        \"reference_type\": \"Purchase Invoice\",\n                        \"reference_name\": doc.name\n                    })\n\n                    journal_entry.append(\"accounts\", {\n                        \"account\": deduction_doc.credit_account,\n                        \"party_type\": \"Supplier\",\n                        \"party\": doc.supplier,\n                        \"credit_in_account_currency\": installment.instalment_amount\n                    })\n                    \n                    frappe.db.set_value(\"Deduction\", deduction['name'], \"deducted_amount\", \n                                        float(deduction_doc.deducted_amount) + float(installment.instalment_amount))\n                    \n                    frappe.db.set_value(\"Deduction Instalment List\", installment.name, {\n                        \"instalment_deducted\": 1,\n                        \"instalment_deducted_date\": frappe.utils.today(), \n                        \"purchase_invoice\": doc.name\n                    })\n                    journal_entry.insert(ignore_permissions=True)\n                    journal_entry.submit()\n                    break\n\n                else:\n                    if outstanding_amount > 0:\n                        journal_entry = frappe.get_doc({\"doctype\": \"Journal Entry\",\"voucher_type\": \"Journal Entry\",\"posting_date\": frappe.utils.today()})\n                        journal_entry.append(\"accounts\", {\n                            \"account\": doc.credit_to,\n                            \"party_type\": \"Supplier\",\n                            \"party\": doc.supplier,\n                            \"debit_in_account_currency\": outstanding_amount,\n                            \"reference_type\": \"Purchase Invoice\",\n                            \"reference_name\": doc.name\n                        })\n    \n                        journal_entry.append(\"accounts\", {\n                            \"account\": deduction_doc.credit_account,\n                            \"party_type\": \"Supplier\",\n                            \"party\": doc.supplier,\n                            \"credit_in_account_currency\": outstanding_amount\n                        })\n                        \n                        frappe.db.set_value(\"Deduction\", deduction['name'], \"deducted_amount\", \n                                            float(deduction_doc.deducted_amount) + float(outstanding_amount))\n                        \n                        frappe.db.set_value(\"Deduction Instalment List\", installment.name, {\n                            \"instalment_amount\": outstanding_amount,\n                            \"instalment_deducted\": 1,\n                            \"instalment_deducted_date\": frappe.utils.today(), \n                            \"purchase_invoice\": doc.name\n                        })\n                        \n                        deduction_list = frappe.new_doc(\"Deduction Instalment List\")\n                        deduction_list.instalment_amount = installment.instalment_amount - outstanding_amount\n                        deduction_list.instalment_deducted = 0\n                        deduction_list.parent = deduction_doc.name,\n                        deduction_list.parenttype = \"Deduction\"\n                        deduction_list.parentfield = \"deduction_instalment_list\"\n                        deduction_list.save()\n                        journal_entry.insert(ignore_permissions=True)\n                        journal_entry.submit()\n                        break\n",
  "script_type": "DocType Event"
 }
]